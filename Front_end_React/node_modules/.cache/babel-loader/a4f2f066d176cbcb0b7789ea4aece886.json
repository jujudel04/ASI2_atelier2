{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jules\\\\Documents\\\\ASI_2\\\\ASI2_atelier2\\\\Front_end_React\\\\src\\\\components\\\\User_form_Login\\\\UserFormLog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from 'react';\nimport { Form, Header, Button, Container } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUser, submitUser } from '../../actions';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserFormLog = props => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({\n    surname: \"\",\n    lastname: \"\",\n    login: \"\",\n    pwd: \"\",\n    money: 0\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  function processInput(event, _ref) {\n    let {\n      valueData\n    } = _ref;\n    const target = event.currentTarget;\n    const value = target.value;\n    const name = target.name;\n    let currentVal = currentUser;\n    setCurrentUser({ ...currentUser,\n      [name]: value\n    });\n    currentVal[name] = value;\n    dispatch(updateUser(currentVal));\n  }\n\n  ;\n\n  function submitOrder(data) {\n    dispatch(submitUser(currentUser));\n    navigate('/activity');\n  }\n\n  ;\n\n  function connectToServer() {\n    fetch('https://asi2-backend-market.herokuapp.com/auth?login=' + currentUser.login + '&pwd=' + currentUser.pwd, {\n      method: 'POST',\n      headers: {\n        \"key\": \"Content-Type\",\n        \"name\": \"Content-Type\",\n        \"value\": \"application/json\",\n        \"type\": \"text\"\n      }\n    }).then(response => response.json()).then(data => {\n      if (data == -1) {\n        console.log(\"Echec de connexion\");\n      } else {\n        console.log(\"Connexion réussie\");\n        fetch('https://asi2-backend-market.herokuapp.com/user/' + data).then(response => response.json()).then(data => {\n          let currentVal = currentUser;\n          console.log(currentVal);\n          dispatch(updateUser(currentVal));\n        }).then(navigate(\"/\"));\n      }\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h4\",\n        dividing: true,\n        children: \"User Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Login\",\n          placeholder: \"Login\",\n          name: \"login\",\n          onChange: processInput,\n          value: currentUser.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          type: \"password\",\n          label: \"Pwd\",\n          placeholder: \"\",\n          name: \"pwd\",\n          onChange: processInput,\n          value: currentUser.pwd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: connectToServer,\n        children: \"Connect to the server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserFormLog, \"jmxBWYtGqR4wnocNZBqs1gXaCeQ=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = UserFormLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserFormLog\");","map":{"version":3,"sources":["C:/Users/Jules/Documents/ASI_2/ASI2_atelier2/Front_end_React/src/components/User_form_Login/UserFormLog.js"],"names":["React","useState","Component","Form","Header","Button","Container","useDispatch","useSelector","updateUser","submitUser","useNavigate","UserFormLog","props","currentUser","setCurrentUser","surname","lastname","login","pwd","money","dispatch","navigate","processInput","event","valueData","target","currentTarget","value","name","currentVal","submitOrder","data","connectToServer","fetch","method","headers","then","response","json","console","log"],"mappings":"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","sourcesContent":["import React, { useState,Component } from 'react';\r\nimport { Form, Header,Button,Container } from 'semantic-ui-react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {updateUser,submitUser} from '../../actions';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const UserFormLog = (props) =>{\r\n       const [currentUser,setCurrentUser]= useState({\r\n                                                        surname:\"\",\r\n                                                        lastname:\"\",\r\n                                                        login:\"\",\r\n                                                        pwd:\"\",\r\n                                                        money:0});\r\n\r\n        const dispatch = useDispatch();\r\n        const navigate = useNavigate();\r\n        \r\n        function processInput(event, { valueData }){\r\n            const target = event.currentTarget;\r\n            const value = target.value;\r\n            const name = target.name;\r\n            let currentVal=currentUser;\r\n            setCurrentUser({...currentUser, [name]: value});\r\n            currentVal[name]= value;\r\n            dispatch(updateUser(currentVal));\r\n        };\r\n    \r\n        function submitOrder(data){\r\n            dispatch(submitUser(currentUser));\r\n            navigate('/activity');\r\n        };\r\n\r\n        function connectToServer() {\r\n            fetch('https://asi2-backend-market.herokuapp.com/auth?login='+currentUser.login+'&pwd='+currentUser.pwd,{\r\n                method: 'POST',\r\n                headers: {\r\n                    \"key\": \"Content-Type\",\r\n                    \"name\": \"Content-Type\",\r\n                    \"value\": \"application/json\",\r\n                    \"type\": \"text\"\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {if(data==-1) {\r\n                console.log(\"Echec de connexion\")\r\n            } else {\r\n                console.log(\"Connexion réussie\")\r\n                fetch('https://asi2-backend-market.herokuapp.com/user/'+data)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    let currentVal=currentUser;\r\n                    console.log(currentVal);\r\n                    dispatch(updateUser(currentVal));\r\n                })\r\n                .then(navigate(\"/\"));\r\n            }});\r\n        };  \r\n\r\n    return (\r\n        <Container>\r\n        <Form>\r\n            <Header as='h4' dividing>\r\n                User Log in\r\n            </Header>\r\n            <Form.Field>\r\n                <Form.Input label=\"Login\" placeholder=\"Login\" name=\"login\" onChange={processInput} value={currentUser.login}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <Form.Input type=\"password\" label=\"Pwd\" placeholder=\"\"  name=\"pwd\" onChange={processInput} value={currentUser.pwd}/>\r\n            </Form.Field>\r\n            <Button type='submit' onClick={connectToServer}>Connect to the server</Button>\r\n        </Form>\r\n        </Container>\r\n    )}"]},"metadata":{},"sourceType":"module"}