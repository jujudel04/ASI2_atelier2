{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jules\\\\Documents\\\\ASI_2\\\\asi2_atelier1\\\\src\\\\components\\\\User\\\\containers\\\\User.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { UserDisplay } from '../components/UserDisplay';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = props => {\n  _s();\n\n  let current_user = useSelector(state => state.userReducer.current_user);\n  let dataToDisplay = '';\n\n  if (props.login != '') {\n    dataToDisplay = /*#__PURE__*/_jsxDEV(UserDisplay, {\n      children: [\"connected = \\\"Welcome\\\"+ \", props.login, \"+ \\\"you have\\\" + \", props.money, \"+\\\"$ available\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n  return dataToDisplay;\n};\n\n_s(User, \"b2KKe7GdtlA1lzfc+jFyoyfL0DI=\", false, function () {\n  return [useSelector];\n});\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/Users/Jules/Documents/ASI_2/asi2_atelier1/src/components/User/containers/User.js"],"names":["React","UserDisplay","useDispatch","useSelector","User","props","current_user","state","userReducer","dataToDisplay","login","money"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAGC,OAAO,MAAMC,IAAI,GAAEC,KAAD,IAAU;AAAA;;AACzB,MAAIC,YAAY,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBF,YAA5B,CAA9B;AACA,MAAIG,aAAa,GAAC,EAAlB;;AACA,MAAIJ,KAAK,CAACK,KAAN,IAAc,EAAlB,EAAsB;AAClBD,IAAAA,aAAa,gBACT,QAAC,WAAD;AAAA,8CAC4BJ,KAAK,CAACK,KADlC,uBACwDL,KAAK,CAACM,KAD9D;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAAA;AACG,SAAOF,aAAP;AACH,CAXG;;GAAML,I;UACSD,W;;;KADTC,I","sourcesContent":["import React from 'react';\r\nimport {UserDisplay} from '../components/UserDisplay';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\n export const User=(props)=> {\r\n    let current_user = useSelector(state => state.userReducer.current_user);\r\n    let dataToDisplay='';\r\n    if (props.login !='') {\r\n        dataToDisplay=(\r\n            <UserDisplay>\r\n                connected = \"Welcome\"+ {props.login}+ \"you have\" + {props.money}+\"$ available\"\r\n            </UserDisplay>\r\n        );\r\n    };\r\n        return dataToDisplay\r\n    };\r\n\r\n"]},"metadata":{},"sourceType":"module"}